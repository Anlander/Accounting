{"ast":null,"code":"var _jsxFileName = \"/Users/philipanlander/dev/react-hooks-router-redux/startup/src/components/Chart/Chart.js\";\nimport React from \"react\";\nimport \"../css/Chart.css\";\nimport ChartBar from \"./ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const valueData = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMax = Math.max(...valueData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(datapoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: totalMax,\n      maxValue: null,\n      label: datapoint.label\n    }, dataPoint.labelß, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/philipanlander/dev/react-hooks-router-redux/startup/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","valueData","dataPoints","map","dataPoint","value","totalMax","Math","max","datapoint","label","labelß"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAlB;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,SAAZ,CAAjB;AAGF,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBM,SAAD,iBACpB,QAAC,QAAD;AAEE,MAAA,KAAK,EAAEH,QAFT;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,KAAK,EAAEG,SAAS,CAACC;AAJnB,OACON,SAAS,CAACO,MADjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;KAAMZ,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport \"../css/Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n    const valueData = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMax = Math.max(...valueData);\n    \n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((datapoint) => (\n        <ChartBar\n          key={dataPoint.labelß}\n          value={totalMax}\n          maxValue={null}\n          label={datapoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}